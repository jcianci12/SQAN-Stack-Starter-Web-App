// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using DAL.Models;
using DAL.Models.Interfaces;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.ChangeTracking.Internal;

namespace DAL
{
    //public class ApplicationDbContext : IdentityDbContext<ApplicationUser, ApplicationRole, string>
    //{
    public partial class
    databaseContext
    : IdentityDbContext<ApplicationUser, ApplicationRole, string>
    {
        //public databaseContext(ModelBuilder builder)
        //{
        //}

        public databaseContext(DbContextOptions<databaseContext> options) :
            base(options)
        {

        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        
            optionsBuilder.UseSqlServer("Server=tcp:localhost,1433;Initial Catalog=product-db;TrustServerCertificate=True;Persist Security Info=False;User ID=sa;Password=CorrectHorseBatteryStapleFor$;MultipleActiveResultSets=False;Encrypt=True;Connection Timeout=60;Pooling=true;Max Pool Size=100;");
        
    }

        public string CurrentUserId { get; set; }

        public virtual DbSet<ApplicationUser> ApplicationUsers { get; set; }

        public virtual DbSet<ApplicationRole> ApplicationRoles { get; set; }


        public virtual DbSet<Message> Messages { get; set; }

        public object Mapping { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<ApplicationUser>().HasKey(i => i.Id);
            modelBuilder
                .Entity<ApplicationUser>()
                .HasMany(u => u.Claims)
                .WithOne()
                .HasForeignKey(c => c.UserId)
                .IsRequired()
                .OnDelete(DeleteBehavior.Cascade);
            modelBuilder
                .Entity<ApplicationUser>()
                .HasMany(u => u.Roles)
                .WithOne()
                .HasForeignKey(r => r.UserId)
                .IsRequired()
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder
                .Entity<ApplicationRole>()
                .HasMany(r => r.Claims)
                .WithOne()
                .HasForeignKey(c => c.RoleId)
                .IsRequired()
                .OnDelete(DeleteBehavior.Cascade);
            modelBuilder
                .Entity<ApplicationRole>()
                .HasMany(r => r.Users)
                .WithOne()
                .HasForeignKey(r => r.RoleId)
                .IsRequired()
                .OnDelete(DeleteBehavior.Cascade);

           


            //Messaging
            //link to sender
            modelBuilder
                .Entity<ApplicationUser>()
                .HasMany(m => m.SentMessages)
                .WithOne(r => r.MessageSender)
                .HasForeignKey(f => f.MessageSenderId);

            //link to recepient
            modelBuilder
                .Entity<ApplicationUser>()
                .HasMany(m => m.ReceivedMessages)
                .WithOne(r => r.MessageRecepient)
                .HasForeignKey(f => f.MessageRecepientId);


           

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
